package com.devonfw.module.kafka;

import java.util.List;
import java.util.Properties;

import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.MockitoJUnit;
import org.mockito.junit.MockitoRule;
import org.springframework.core.env.Environment;

import com.devonfw.module.kafka.common.KafkaException;
import com.devonfw.module.kafka.config.KafkaConsumerProperties;
import com.devonfw.module.kafka.consumer.KafkaMessageConsumer;
import com.devonfw.module.kafka.logic.KafkaConsumerLogic;
import com.devonfw.module.kafka.message.KafkaMessage;

import mockit.MockUp;
import mockit.integration.junit4.JMockit;

/**
 * @author dichowdh
 *
 */
@RunWith(JMockit.class)
public class KafkaConsumerLogicTest {

  @Rule
  public MockitoRule rule = MockitoJUnit.rule();

  private List<ConsumerRecord<byte[], byte[]>> recordMetadata;

  @Mock
  KafkaMessageConsumer consumer;

  @Mock
  Environment environment;

  @Mock
  static KafkaConsumerProperties kafkaConsumerProperties;

  @Mock
  Properties properties;

  @Mock
  KafkaConsumer<String, String> strConsumer;

  @InjectMocks
  KafkaConsumerLogic kafkaConsumerLogic;

  /**
   *
   */
  public void mockKafkaConsumer() {

    new MockUp<KafkaConsumer>() {
      @mockit.Mock
      public void $init() {

      }
    };
  }

  /**
   *
   */
  @Before
  public void setUp() {

    MockitoAnnotations.initMocks(this);

    kafkaConsumerProperties = new KafkaConsumerProperties();
    Properties prop = kafkaConsumerProperties.getProperties();
    kafkaConsumerProperties.setProperties(prop);
  }

  /**
   *
   */

  @Test
  public void receiveMessageTest() {

    String value = "ABC";

    Mockito.when(this.consumer.consumeTextMesage(Mockito.anyString())).thenReturn(this.recordMetadata);
    try {
      List<KafkaMessage> result = this.kafkaConsumerLogic.consumeTextMessage("test");

    } catch (KafkaException e) {

      // TODO Auto-generated catch block
      e.printStackTrace();
    }

  }



}
